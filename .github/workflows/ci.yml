name: 'Build and Deploy'

on:
  push:
    branches:
      - master
    tags: '*'

permissions:
  contents: read
  packages: write

jobs:
  run-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Run tests
        uses: borales/actions-yarn@v4
        with:
          cmd: test

  build:
    runs-on: self-hosted
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Upload built app
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./dist

  versioning:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        run: sudo apt-get install -y jq

      - name: Versioning tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          jq ".version=\"$VERSION\"" package.json > package.json.new

      - name: Versioning non-tag
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          LATEST_TAG=$(git describe --tags --abbrev=0) || true
          if [ -n "$LATEST_TAG" ]; then
            echo "VERSION=0.0.0-$GIT_HASH" >> $GITHUB_ENV
          else
            echo "VERSION=$LATEST_TAG-$GIT_HASH" >> $GITHUB_ENV
          fi
          jq ".version=\"$VERSION\"" package.json > package.json.new

      - name: Upload new package.json
        uses: actions/upload-artifact@v4
        with:
          name: package-json
          path: package.json.new

  deploy-docker:
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download app
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./dist

      - name: Download new package.json
        uses: actions/download-artifact@v4
        with:
          name: package-json

      - name: Rename new package.json
        run: mv package.json.new package.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/anwitars/principal

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
          logout: false

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
